/**
 * This describes the directory structure of the folder that contains
 * the mdl files, and contains some helper functions that help manage
 * the frontend state.
 * This is not about the mdl format itself. To see that, visit the ksy folder
 * in the root directory.
 * @module
 */

import { MapIndicesToValues, TupleSliceUnion } from "./types/common";
import { findLastNotExceeding, mod } from "./utils";

export type FilePathTuple = MapIndicesToValues<
  typeof fileIndices,
  typeof fileArray
>;

/**
 * Given an index of a leaf node in a tree, return the values of each node on
 * the path from root to the node representing that index.
 * @param index the index of the node
 */
export const destructureIndex = (
  index: number
): MapIndicesToValues<typeof fileIndices, typeof fileArray> => {
  if (index < 0 || index >= fileArray.length) {
    throw Error(
      `Index ${index} of out of bounds for file array with length ${fileArray.length}`
    );
  }
  // TODO: Can we write a better TypeScript map function?
  // If we "unroll" this loop, it preserves all the type information without "as unknown".
  return fileIndices.map((indexArray) => {
    let { value: indexAtDepth } = findLastNotExceeding(indexArray, index);
    if (indexAtDepth === undefined) {
      throw Error("Failed to destructure index!");
    }
    return fileArray[indexAtDepth];
  }) as unknown as MapIndicesToValues<typeof fileIndices, typeof fileArray>;
};
/**
 * Given the values of each node of a path in a tree, return the index of the
 * last node in the path.
 */
export const constructIndex = (
  ...values: TupleSliceUnion<FilePathTuple, 0, typeof fileIndices.length>
) => {
  if (values.length > fileIndices.length) {
    throw Error(
      `Need at most ${fileIndices.length} values, got ${values.length}`
    );
  }
  let index = 0;
  for (const value of values) {
    const newIndex = fileArray.indexOf(value, index);
    if (newIndex !== -1) {
      index = newIndex;
    }
  }
  return index;
};
/**
 * Jump from a node to one of its neighbors on the same depth.
 * @param currentIndex index of current node in the tree
 * @param depth the depth of the given node; we will travel along this depth
 * @param travelValue how far to travel (can be negative, but must be integer)
 * @param lockToParent whether to allow traveling to nodes outside of the
 * children of the current parent. If true, travel will wrap around within
 * the children of the parent node only, rather than within the given level.
 * @returns the new index
 */
export const travelAlongLevel = (
  currentIndex: number,
  depth: number,
  travelValue = 1,
  lockToParent = false
) => {
  if (depth < 0 || depth >= fileIndices.length) {
    throw Error(
      `Level ${depth} of out of bounds for tree of depth ${fileIndices.length}`
    );
  }
  const { index: pathNodeIndex } = findLastNotExceeding(
    fileIndices[depth],
    currentIndex
  );
  if (!lockToParent) {
    const newIndex = mod(
      pathNodeIndex + travelValue,
      fileIndices[depth].length
    );
    return fileIndices[depth][newIndex];
  } else {
    if (depth === 0) {
      throw Error(
        "Depth zero doesn't make sense for lockToParent. Root nodes have no parent."
      );
    }
    const parentDepth = depth - 1;
    const { index: parentNodeIndex } = findLastNotExceeding(
      fileIndices[parentDepth],
      currentIndex
    );
    const firstChild = fileIndices[parentDepth][parentNodeIndex] + parentDepth;
    const childCount = folderSizes[depth][parentNodeIndex];
    const newIndex =
      firstChild +
      mod(
        fileIndices[depth][pathNodeIndex] - firstChild + travelValue,
        childCount
      );
    return newIndex;
  }
};
export const fileArray = [
  "chr",
  "agl",
  "agl.mdl",
  "ragl.mdl",
  "arm",
  "arm.mdl",
  "boat",
  "boat.mdl",
  "bos",
  "bos.mdl",
  "edi",
  "hhh_edi.mdl",
  "hhh_edi_notex.mdl",
  "lll_edi.mdl",
  "rhhh_edi.mdl",
  "favorites",
  "agl.mdl",
  "inu.mdl",
  "lau.mdl",
  "org.mdl",
  "wp_csaw.mdl",
  "ike",
  "ike.mdl",
  "item",
  "3sk.mdl",
  "ali_01.mdl",
  "ali_02.mdl",
  "ali_03.mdl",
  "ali_04.mdl",
  "ali_05.mdl",
  "ate_01.mdl",
  "ate_02.mdl",
  "ate_03.mdl",
  "ate_04.mdl",
  "ate_05.mdl",
  "b_ami.mdl",
  "b_bol.mdl",
  "b_cha.mdl",
  "b_clo.mdl",
  "b_d00.mdl",
  "b_d01.mdl",
  "b_d02.mdl",
  "b_d03.mdl",
  "b_d05.mdl",
  "b_d06.mdl",
  "b_d08.mdl",
  "b_d10.mdl",
  "b_dha.mdl",
  "b_do4.mdl",
  "b_doo.mdl",
  "b_dor.mdl",
  "b_ell.mdl",
  "b_hul.mdl",
  "b_nat.mdl",
  "b_nik.mdl",
  "b_ori.mdl",
  "b_pia.mdl",
  "b_piz.mdl",
  "b_pop.mdl",
  "b_rei.mdl",
  "b_rop.mdl",
  "b_sti.mdl",
  "b_tan.mdl",
  "b_tel.mdl",
  "bab.mdl",
  "baf.mdl",
  "box.mdl",
  "box_01.mdl",
  "box_02.mdl",
  "c1b.mdl",
  "c2b.mdl",
  "c3b.mdl",
  "c4b.mdl",
  "c5b.mdl",
  "c6b.mdl",
  "c7b.mdl",
  "c8b.mdl",
  "c9b.mdl",
  "cab.mdl",
  "cbb.mdl",
  "ccb.mdl",
  "cda.mdl",
  "cdb.mdl",
  "cua.mdl",
  "cub.mdl",
  "d09.mdl",
  "dhb.mdl",
  "dhv.mdl",
  "dlg.mdl",
  "dm2.mdl",
  "dmr.mdl",
  "evj.mdl",
  "evk.mdl",
  "fan.mdl",
  "g_drink.mdl",
  "g_firstaid.mdl",
  "g_hair.mdl",
  "g_handbul.mdl",
  "g_handgun.mdl",
  "g_jlight.mdl",
  "g_kakuzai.mdl",
  "g_keyelevator.mdl",
  "g_keypurple.mdl",
  "g_letterm.mdl",
  "g_needle.mdl",
  "g_radio.mdl",
  "gom.mdl",
  "hed.mdl",
  "hin.mdl",
  "hou.mdl",
  "i_bear.mdl",
  "i_bear2.mdl",
  "i_colt.mdl",
  "i_flight.mdl",
  "i_handgun.mdl",
  "i_hari.mdl",
  "i_headphone.mdl",
  "i_j_light.mdl",
  "i_juice.mdl",
  "i_kakuzai.mdl",
  "i_key_clock.mdl",
  "i_keycou.mdl",
  "i_keyelevator.mdl",
  "i_keyspe.mdl",
  "i_knife.mdl",
  "i_letter.mdl",
  "i_letterm.mdl",
  "i_lring.mdl",
  "i_magazine.mdl",
  "i_mdrug.mdl",
  "i_mtablet.mdl",
  "i_needle.mdl",
  "i_photo.mdl",
  "i_purse.mdl",
  "i_radio.mdl",
  "i_video.mdl",
  "inu.mdl",
  "kab.mdl",
  "kum.mdl",
  "lsi.mdl",
  "mal.mdl",
  "mne.mdl",
  "mx2.mdl",
  "nak.mdl",
  "nat.mdl",
  "nef.mdl",
  "neo.mdl",
  "nep.mdl",
  "noa.mdl",
  "nor.mdl",
  "org.mdl",
  "ori.mdl",
  "piz.mdl",
  "pxx.mdl",
  "rboat.mdl",
  "ri_knife.mdl",
  "ri_photo.mdl",
  "rinu.mdl",
  "rlau.mdl",
  "rmry.mdl",
  "rmxx.mdl",
  "s00.mdl",
  "s01.mdl",
  "s02.mdl",
  "s03.mdl",
  "s04.mdl",
  "s05.mdl",
  "s06.mdl",
  "s07.mdl",
  "s08.mdl",
  "s09.mdl",
  "s0a.mdl",
  "s0b.mdl",
  "s0c.mdl",
  "s0d.mdl",
  "s0e.mdl",
  "s0f.mdl",
  "s0g.mdl",
  "s0h.mdl",
  "s0i.mdl",
  "s0j.mdl",
  "s0k.mdl",
  "s0l.mdl",
  "s0m.mdl",
  "s0n.mdl",
  "s0o.mdl",
  "s0p.mdl",
  "tlr.mdl",
  "tom.mdl",
  "tre.mdl",
  "tvc.mdl",
  "ty2.mdl",
  "ty3.mdl",
  "ura0.mdl",
  "ura1.mdl",
  "ura2.mdl",
  "ura3.mdl",
  "x_ample.mdl",
  "x_battery.mdl",
  "x_bear.mdl",
  "x_canopen.mdl",
  "x_cinderella.mdl",
  "x_coinelder.mdl",
  "x_coinprisoner.mdl",
  "x_coinsnake.mdl",
  "x_cup.mdl",
  "x_drink.mdl",
  "x_eggred.mdl",
  "x_eggrust.mdl",
  "x_firstaid.mdl",
  "x_hair.mdl",
  "x_handbul.mdl",
  "x_handgun.mdl",
  "x_horse.mdl",
  "x_jlight.mdl",
  "x_juice.mdl",
  "x_kakuzai.mdl",
  "x_key202.mdl",
  "x_key312.mdl",
  "x_key3f.mdl",
  "x_keybar.mdl",
  "x_keybase.mdl",
  "x_keybronze.mdl",
  "x_keyclock.mdl",
  "x_keycourt.mdl",
  "x_keyelevator.mdl",
  "x_keyemerg.mdl",
  "x_keyemploy.mdl",
  "x_keyfalse.mdl",
  "x_keyfish.mdl",
  "x_keygate.mdl",
  "x_keyhos.mdl",
  "x_keylyne.mdl",
  "x_keynorth.mdl",
  "x_keypurple.mdl",
  "x_keyrapis.mdl",
  "x_keyroof.mdl",
  "x_keyspiral.mdl",
  "x_letterm.mdl",
  "x_lightbulb.mdl",
  "x_lighter.mdl",
  "x_lostmemory.mdl",
  "x_magazine.mdl",
  "x_mermaid.mdl",
  "x_needle.mdl",
  "x_oil.mdl",
  "x_pictstand.mdl",
  "x_plate_female.mdl",
  "x_plate_kick.mdl",
  "x_plate_pig.mdl",
  "x_plier.mdl",
  "x_purse.mdl",
  "x_radio.mdl",
  "x_redrelig.mdl",
  "x_riflebul.mdl",
  "x_ringcopper.mdl",
  "x_ringlead.mdl",
  "x_shotbul.mdl",
  "x_snow.mdl",
  "x_spanner.mdl",
  "x_thinner.mdl",
  "x_video.mdl",
  "x_waxdoll.mdl",
  "x_wp_csaw.mdl",
  "x_wp_pipe.mdl",
  "x_wp_riflgun.mdl",
  "x_wp_shotgun.mdl",
  "x_wp_sp.mdl",
  "xag.mdl",
  "jms",
  "hhh_jms.mdl",
  "hhh_jms_notex.mdl",
  "hhl_jms.mdl",
  "hhl_jms_notex.mdl",
  "hll_jms.mdl",
  "hll_jms_notex.mdl",
  "lll_jms.mdl",
  "lll_jms_hand.mdl",
  "lll_jms_kaku.mdl",
  "lll_jms_n.mdl",
  "lll_jms_normal.mdl",
  "lll_jms_notex.mdl",
  "rhhh_jms.mdl",
  "rhhl_jms.mdl",
  "rhll_jms.mdl",
  "rlll_jms.mdl",
  "lau",
  "lau.mdl",
  "mar",
  "hhh_mar.mdl",
  "hhh_mar_notex.mdl",
  "lll_mar.mdl",
  "rhhh_mar.mdl",
  "rhhh_mar_notex.mdl",
  "rlll_mar.mdl",
  "mkn",
  "mkn.mdl",
  "mry",
  "mry.mdl",
  "mxx",
  "mxx.mdl",
  "nse",
  "nse.mdl",
  "nse_st.mdl",
  "oni",
  "oni.mdl",
  "pap",
  "pap.mdl",
  "red",
  "red.mdl",
  "scu",
  "scu.mdl",
  "scu_st.mdl",
  "tyu",
  "tyu.mdl",
  "tyu_st.mdl",
  "wp",
  "rwp_csaw.mdl",
  "rwp_handgun.mdl",
  "rwp_kakuzai.mdl",
  "rwp_nata.mdl",
  "rwp_pipe.mdl",
  "rwp_riflgun.mdl",
  "rwp_shotgun.mdl",
  "rwp_sp.mdl",
  "wp_csaw.mdl",
  "wp_handgun.mdl",
  "wp_kakuzai.mdl",
  "wp_nata.mdl",
  "wp_pipe.mdl",
  "wp_riflgun.mdl",
  "wp_shotgun.mdl",
  "wp_sp.mdl",
  "xoo",
  "xoo.mdl",
  "chr2",
  "item",
  "b_d1x.mdl",
  "b_d2x.mdl",
  "b_d8x.mdl",
  "bdcard.mdl",
  "enx.mdl",
  "i_oil.mdl",
  "i_revo.mdl",
  "ri_revo.mdl",
  "ri_revo_notex.mdl",
  "s0x.mdl",
  "s1x.mdl",
  "u0x.mdl",
  "w1x.mdl",
  "w2x.mdl",
  "w2x_notex.mdl",
  "w3x.mdl",
  "w3x_notex.mdl",
  "w4x.mdl",
  "w4x_notex.mdl",
  "w5x.mdl",
  "w5x_notex.mdl",
  "w6x.mdl",
  "w6x_notex.mdl",
  "w7x.mdl",
  "w8x.mdl",
  "w9x.mdl",
  "x_birthday.mdl",
  "x_bullet_rivolver.mdl",
  "x_bullt_revolver.mdl",
  "x_chinanife.mdl",
  "x_cosmos.mdl",
  "x_houban_black.mdl",
  "x_houban_red.mdl",
  "x_houban_white.mdl",
  "x_keyacacia.mdl",
  "x_mach.mdl",
  "x_present.mdl",
  "x_revolver.mdl",
  "x_sekihi_black.mdl",
  "x_sekihi_red.mdl",
  "x_sekihi_white.mdl",
  "mar",
  "hhh_mar.mdl",
  "lxx_mar.mdl",
  "rhhh_mar.mdl",
  "rhhh_mar_notex.mdl",
  "rlxx_mar.mdl",
  "rlxx_mar_notex.mdl",
  "wp",
  "rwp_chinanife.mdl",
  "rwp_chinanife_notex.mdl",
  "rwp_colt.mdl",
  "rwp_colt_notex.mdl",
  "wp_chinanife.mdl",
  "wp_colt.mdl",
] as const;
export const fileIndices = [
  [0, 335],
  [
    1, 4, 6, 8, 10, 15, 21, 23, 269, 286, 288, 295, 297, 299, 301, 304, 306,
    308, 310, 313, 316, 333, 336, 378, 385,
  ],
  [
    2, 3, 5, 7, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28,
    29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
    48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
    67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
    86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
    104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
    119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133,
    134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
    149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
    164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
    179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193,
    194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
    209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
    224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
    239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253,
    254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
    270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284,
    285, 287, 289, 290, 291, 292, 293, 294, 296, 298, 300, 302, 303, 305, 307,
    309, 311, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326,
    327, 328, 329, 330, 331, 332, 334, 337, 338, 339, 340, 341, 342, 343, 344,
    345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359,
    360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374,
    375, 376, 377, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391,
  ],
] as const;
export const folderSizes = [
  [2],
  [22, 3],
  [
    2, 1, 1, 1, 4, 5, 1, 245, 16, 1, 6, 1, 1, 1, 2, 1, 1, 1, 2, 2, 16, 1, 41, 6,
    6,
  ],
] as const;
export type MuseumScenario =
  (typeof fileArray)[(typeof fileIndices)[0][number]];
export type MuseumFolder = (typeof fileArray)[(typeof fileIndices)[1][number]];
export type MuseumFile = (typeof fileArray)[(typeof fileIndices)[2][number]];
export const fileStructure = {
  chr: {
    oni: ["oni.mdl"],
    edi: ["lll_edi.mdl", "rhhh_edi.mdl", "hhh_edi.mdl", "hhh_edi_notex.mdl"],
    mkn: ["mkn.mdl"],
    mar: [
      "rhhh_mar.mdl",
      "hhh_mar.mdl",
      "rlll_mar.mdl",
      "hhh_mar_notex.mdl",
      "lll_mar.mdl",
      "rhhh_mar_notex.mdl",
    ],
    xoo: ["xoo.mdl"],
    mxx: ["mxx.mdl"],
    scu: ["scu_st.mdl", "scu.mdl"],
    favorites: ["lau.mdl", "agl.mdl", "org.mdl", "wp_csaw.mdl", "inu.mdl"],
    boat: ["boat.mdl"],
    mry: ["mry.mdl"],
    pap: ["pap.mdl"],
    wp: [
      "wp_riflgun.mdl",
      "rwp_kakuzai.mdl",
      "wp_sp.mdl",
      "wp_shotgun.mdl",
      "wp_handgun.mdl",
      "rwp_sp.mdl",
      "wp_pipe.mdl",
      "wp_kakuzai.mdl",
      "wp_csaw.mdl",
      "rwp_riflgun.mdl",
      "wp_nata.mdl",
      "rwp_handgun.mdl",
      "rwp_csaw.mdl",
      "rwp_nata.mdl",
      "rwp_shotgun.mdl",
      "rwp_pipe.mdl",
    ],
    red: ["red.mdl"],
    ike: ["ike.mdl"],
    agl: ["ragl.mdl", "agl.mdl"],
    item: [
      "x_keyspiral.mdl",
      "x_mermaid.mdl",
      "x_coinprisoner.mdl",
      "ty2.mdl",
      "b_piz.mdl",
      "tlr.mdl",
      "s0g.mdl",
      "s01.mdl",
      "s0p.mdl",
      "b_do4.mdl",
      "x_key202.mdl",
      "x_keyrapis.mdl",
      "b_cha.mdl",
      "i_j_light.mdl",
      "cbb.mdl",
      "s00.mdl",
      "i_keycou.mdl",
      "s0f.mdl",
      "c9b.mdl",
      "hin.mdl",
      "b_nat.mdl",
      "ty3.mdl",
      "i_needle.mdl",
      "x_eggred.mdl",
      "x_keybase.mdl",
      "s0d.mdl",
      "s02.mdl",
      "i_photo.mdl",
      "x_cup.mdl",
      "ate_05.mdl",
      "ate_04.mdl",
      "i_hari.mdl",
      "x_keypurple.mdl",
      "x_wp_sp.mdl",
      "s03.mdl",
      "s0e.mdl",
      "c5b.mdl",
      "mx2.mdl",
      "x_radio.mdl",
      "rboat.mdl",
      "s07.mdl",
      "c4b.mdl",
      "s0a.mdl",
      "x_lightbulb.mdl",
      "b_tel.mdl",
      "ri_knife.mdl",
      "x_firstaid.mdl",
      "ate_01.mdl",
      "b_dor.mdl",
      "s06.mdl",
      "dhv.mdl",
      "x_bear.mdl",
      "x_canopen.mdl",
      "g_firstaid.mdl",
      "b_rei.mdl",
      "c8b.mdl",
      "s04.mdl",
      "ccb.mdl",
      "d09.mdl",
      "s0b.mdl",
      "neo.mdl",
      "g_drink.mdl",
      "ate_03.mdl",
      "x_keyroof.mdl",
      "ate_02.mdl",
      "i_video.mdl",
      "x_horse.mdl",
      "kab.mdl",
      "s0c.mdl",
      "s05.mdl",
      "tom.mdl",
      "dhb.mdl",
      "i_lring.mdl",
      "x_lighter.mdl",
      "x_magazine.mdl",
      "x_drink.mdl",
      "x_needle.mdl",
      "x_keynorth.mdl",
      "x_ringlead.mdl",
      "x_keyfish.mdl",
      "x_ample.mdl",
      "x_battery.mdl",
      "cda.mdl",
      "b_ell.mdl",
      "c3b.mdl",
      "x_keyemerg.mdl",
      "rlau.mdl",
      "b_nik.mdl",
      "i_flight.mdl",
      "i_knife.mdl",
      "g_radio.mdl",
      "x_letterm.mdl",
      "piz.mdl",
      "x_lostmemory.mdl",
      "nat.mdl",
      "cdb.mdl",
      "g_letterm.mdl",
      "fan.mdl",
      "i_letter.mdl",
      "i_juice.mdl",
      "ri_photo.mdl",
      "x_keycourt.mdl",
      "g_kakuzai.mdl",
      "b_d08.mdl",
      "org.mdl",
      "x_kakuzai.mdl",
      "x_key312.mdl",
      "x_keyelevator.mdl",
      "tre.mdl",
      "x_plate_pig.mdl",
      "i_purse.mdl",
      "c2b.mdl",
      "i_headphone.mdl",
      "x_coinsnake.mdl",
      "i_handgun.mdl",
      "x_jlight.mdl",
      "b_ami.mdl",
      "g_keypurple.mdl",
      "i_bear2.mdl",
      "b_clo.mdl",
      "b_dha.mdl",
      "x_waxdoll.mdl",
      "x_plate_kick.mdl",
      "x_key3f.mdl",
      "b_pop.mdl",
      "x_pictstand.mdl",
      "i_mtablet.mdl",
      "c1b.mdl",
      "ori.mdl",
      "b_d06.mdl",
      "i_kakuzai.mdl",
      "x_keyemploy.mdl",
      "i_radio.mdl",
      "x_wp_csaw.mdl",
      "x_oil.mdl",
      "box.mdl",
      "x_keygate.mdl",
      "g_keyelevator.mdl",
      "x_video.mdl",
      "dlg.mdl",
      "b_d05.mdl",
      "baf.mdl",
      "nak.mdl",
      "g_handgun.mdl",
      "noa.mdl",
      "b_d10.mdl",
      "i_colt.mdl",
      "b_rop.mdl",
      "i_magazine.mdl",
      "x_handgun.mdl",
      "x_keybronze.mdl",
      "x_thinner.mdl",
      "x_coinelder.mdl",
      "b_d00.mdl",
      "b_tan.mdl",
      "x_wp_shotgun.mdl",
      "nor.mdl",
      "bab.mdl",
      "b_d01.mdl",
      "hou.mdl",
      "x_keyfalse.mdl",
      "x_spanner.mdl",
      "x_snow.mdl",
      "x_plier.mdl",
      "dmr.mdl",
      "b_d03.mdl",
      "i_key_clock.mdl",
      "x_wp_pipe.mdl",
      "rmry.mdl",
      "x_ringcopper.mdl",
      "b_d02.mdl",
      "dm2.mdl",
      "i_letterm.mdl",
      "ura2.mdl",
      "x_keyclock.mdl",
      "rinu.mdl",
      "s08.mdl",
      "s0n.mdl",
      "ali_04.mdl",
      "x_hair.mdl",
      "inu.mdl",
      "x_shotbul.mdl",
      "ali_05.mdl",
      "x_juice.mdl",
      "s0o.mdl",
      "s09.mdl",
      "b_bol.mdl",
      "tvc.mdl",
      "cub.mdl",
      "ura3.mdl",
      "xag.mdl",
      "hed.mdl",
      "ura1.mdl",
      "i_bear.mdl",
      "mne.mdl",
      "c7b.mdl",
      "s0m.mdl",
      "b_ori.mdl",
      "evj.mdl",
      "evk.mdl",
      "pxx.mdl",
      "x_purse.mdl",
      "s0l.mdl",
      "x_plate_female.mdl",
      "ura0.mdl",
      "cua.mdl",
      "g_jlight.mdl",
      "i_keyspe.mdl",
      "s0h.mdl",
      "i_mdrug.mdl",
      "ali_02.mdl",
      "g_handbul.mdl",
      "x_keylyne.mdl",
      "kum.mdl",
      "g_needle.mdl",
      "ali_03.mdl",
      "x_riflebul.mdl",
      "x_handbul.mdl",
      "c6b.mdl",
      "s0i.mdl",
      "3sk.mdl",
      "box_01.mdl",
      "b_pia.mdl",
      "mal.mdl",
      "x_keyhos.mdl",
      "s0k.mdl",
      "i_keyelevator.mdl",
      "ali_01.mdl",
      "x_cinderella.mdl",
      "nef.mdl",
      "lsi.mdl",
      "b_sti.mdl",
      "gom.mdl",
      "nep.mdl",
      "x_eggrust.mdl",
      "x_keybar.mdl",
      "rmxx.mdl",
      "b_doo.mdl",
      "b_hul.mdl",
      "x_wp_riflgun.mdl",
      "s0j.mdl",
      "cab.mdl",
      "box_02.mdl",
      "x_redrelig.mdl",
      "g_hair.mdl",
    ],
    bos: ["bos.mdl"],
    lau: ["lau.mdl"],
    arm: ["arm.mdl"],
    tyu: ["tyu.mdl", "tyu_st.mdl"],
    jms: [
      "lll_jms_normal.mdl",
      "hhh_jms.mdl",
      "hll_jms.mdl",
      "rhll_jms.mdl",
      "lll_jms_hand.mdl",
      "rhhh_jms.mdl",
      "lll_jms_kaku.mdl",
      "lll_jms_notex.mdl",
      "rhhl_jms.mdl",
      "lll_jms.mdl",
      "hhh_jms_notex.mdl",
      "hhl_jms_notex.mdl",
      "rlll_jms.mdl",
      "hll_jms_notex.mdl",
      "hhl_jms.mdl",
      "lll_jms_n.mdl",
    ],
    nse: ["nse.mdl", "nse_st.mdl"],
  },
  chr2: {
    mar: [
      "rhhh_mar.mdl",
      "rlxx_mar_notex.mdl",
      "hhh_mar.mdl",
      "rlxx_mar.mdl",
      "lxx_mar.mdl",
      "rhhh_mar_notex.mdl",
    ],
    wp: [
      "rwp_colt_notex.mdl",
      "wp_chinanife.mdl",
      "rwp_chinanife.mdl",
      "rwp_colt.mdl",
      "rwp_chinanife_notex.mdl",
      "wp_colt.mdl",
    ],
    item: [
      "w3x.mdl",
      "x_bullt_revolver.mdl",
      "w3x_notex.mdl",
      "x_keyacacia.mdl",
      "x_cosmos.mdl",
      "w6x_notex.mdl",
      "x_sekihi_red.mdl",
      "x_present.mdl",
      "w2x.mdl",
      "x_revolver.mdl",
      "bdcard.mdl",
      "w9x.mdl",
      "i_oil.mdl",
      "x_bullet_rivolver.mdl",
      "w5x.mdl",
      "b_d1x.mdl",
      "w4x_notex.mdl",
      "w4x.mdl",
      "x_houban_white.mdl",
      "x_chinanife.mdl",
      "x_birthday.mdl",
      "w8x.mdl",
      "ri_revo.mdl",
      "x_sekihi_black.mdl",
      "x_mach.mdl",
      "x_houban_red.mdl",
      "w7x.mdl",
      "ri_revo_notex.mdl",
      "i_revo.mdl",
      "w6x.mdl",
      "b_d2x.mdl",
      "w2x_notex.mdl",
      "enx.mdl",
      "w5x_notex.mdl",
      "w1x.mdl",
      "s0x.mdl",
      "x_houban_black.mdl",
      "u0x.mdl",
      "b_d8x.mdl",
      "s1x.mdl",
      "x_sekihi_white.mdl",
    ],
  },
} as const;
export const rootFolders = ["chr", "chr2"] as const;
export const chrFolders = [
  "agl",
  "arm",
  "boat",
  "bos",
  "edi",
  "favorites",
  "ike",
  "item",
  "jms",
  "lau",
  "mar",
  "mkn",
  "mry",
  "mxx",
  "nse",
  "oni",
  "pap",
  "red",
  "scu",
  "tyu",
  "wp",
  "xoo",
] as const;
export const chr2Folders = ["item", "mar", "wp"] as const;
